{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shank\\\\surprise\\\\src\\\\Pages\\\\TriviaQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"Who wrote 'Romeo and Juliet'?\",\n  answer: \"Shakespeare\"\n}, {\n  question: \"What is the symbol of love?\",\n  answer: \"❤️\"\n}, {\n  question: \"Who sang 'I Will Always Love You'?\",\n  answer: \"Whitney Houston\"\n}];\nfunction TriviaQuiz({\n  onComplete\n}) {\n  _s();\n  const [score, setScore] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const handleAnswer = index => {\n    if (answer.toLowerCase() === questions[index].answer.toLowerCase()) {\n      setScore(score + 1);\n    }\n    if (index === questions.length - 1) {\n      onComplete();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trivia Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: answer,\n        onChange: e => setAnswer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(index),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(TriviaQuiz, \"etJqcs3BnavVCoCmESdH5j0EFXU=\");\n_c = TriviaQuiz;\nexport default TriviaQuiz;\nvar _c;\n$RefreshReg$(_c, \"TriviaQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","answer","TriviaQuiz","onComplete","_s","score","setScore","setAnswer","handleAnswer","index","toLowerCase","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shank/surprise/src/Pages/TriviaQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst questions = [\r\n  { question: \"Who wrote 'Romeo and Juliet'?\", answer: \"Shakespeare\" },\r\n  { question: \"What is the symbol of love?\", answer: \"❤️\" },\r\n  { question: \"Who sang 'I Will Always Love You'?\", answer: \"Whitney Houston\" },\r\n];\r\n\r\nfunction TriviaQuiz({ onComplete }) {\r\n  const [score, setScore] = useState(0);\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  const handleAnswer = (index) => {\r\n    if (answer.toLowerCase() === questions[index].answer.toLowerCase()) {\r\n      setScore(score + 1);\r\n    }\r\n    if (index === questions.length - 1) {\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Trivia Quiz</h2>\r\n      {questions.map((q, index) => (\r\n        <div key={index}>\r\n          <p>{q.question}</p>\r\n          <input type=\"text\" value={answer} onChange={(e) => setAnswer(e.target.value)} />\r\n          <button onClick={() => handleAnswer(index)}>Submit</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TriviaQuiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,CAChB;EAAEC,QAAQ,EAAE,+BAA+B;EAAEC,MAAM,EAAE;AAAc,CAAC,EACpE;EAAED,QAAQ,EAAE,6BAA6B;EAAEC,MAAM,EAAE;AAAK,CAAC,EACzD;EAAED,QAAQ,EAAE,oCAAoC;EAAEC,MAAM,EAAE;AAAkB,CAAC,CAC9E;AAED,SAASC,UAAUA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACK,MAAM,EAAEM,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAIR,MAAM,CAACS,WAAW,CAAC,CAAC,KAAKX,SAAS,CAACU,KAAK,CAAC,CAACR,MAAM,CAACS,WAAW,CAAC,CAAC,EAAE;MAClEJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IACA,IAAII,KAAK,KAAKV,SAAS,CAACY,MAAM,GAAG,CAAC,EAAE;MAClCR,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBjB,SAAS,CAACkB,GAAG,CAAC,CAACC,CAAC,EAAET,KAAK,kBACtBX,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAIM,CAAC,CAAClB;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBlB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEnB,MAAO;QAACoB,QAAQ,EAAGC,CAAC,IAAKf,SAAS,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChFlB,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAACC,KAAK,CAAE;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHnDP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACZ,EAAA,CAzBQF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA2BnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}