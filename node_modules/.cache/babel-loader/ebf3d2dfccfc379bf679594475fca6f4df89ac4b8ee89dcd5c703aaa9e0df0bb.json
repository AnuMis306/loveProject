{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shank\\\\surprise\\\\src\\\\Pages\\\\MemoryMatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [{\n  id: 1,\n  value: '‚ù§Ô∏è',\n  matched: false\n}, {\n  id: 2,\n  value: '‚ù§Ô∏è',\n  matched: false\n}, {\n  id: 3,\n  value: 'üíê',\n  matched: false\n}, {\n  id: 4,\n  value: 'üíê',\n  matched: false\n}, {\n  id: 5,\n  value: 'üíå',\n  matched: false\n}, {\n  id: 6,\n  value: 'üíå',\n  matched: false\n}];\nconst shuffleCards = () => {\n  return [...cards].sort(() => Math.random() - 0.5);\n};\nfunction MemoryMatch({\n  onComplete\n}) {\n  _s();\n  const [board, setBoard] = useState(shuffleCards());\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const handleCardClick = id => {\n    if (flipped.length === 2) return;\n    const newFlipped = [...flipped, id];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      const [firstId, secondId] = newFlipped;\n      if (board[firstId].value === board[secondId].value) {\n        setMatched([...matched, firstId, secondId]);\n        setFlipped([]);\n      } else {\n        setTimeout(() => setFlipped([]), 1000);\n      }\n    }\n  };\n  useEffect(() => {\n    if (matched.length === board.length) {\n      onComplete(); // Go to the next game\n    }\n  }, [matched]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Memory Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-board\",\n      children: board.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${flipped.includes(index) || matched.includes(index) ? 'flipped' : ''}`,\n        onClick: () => handleCardClick(index),\n        children: flipped.includes(index) || matched.includes(index) ? card.value : '‚ùì'\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryMatch, \"pRIMFTovKvZ7s2FgIf07BsNfLdc=\");\n_c = MemoryMatch;\nexport default MemoryMatch;\nvar _c;\n$RefreshReg$(_c, \"MemoryMatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","cards","id","value","matched","shuffleCards","sort","Math","random","MemoryMatch","onComplete","_s","board","setBoard","flipped","setFlipped","setMatched","handleCardClick","length","newFlipped","firstId","secondId","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","card","index","includes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shank/surprise/src/Pages/MemoryMatch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst cards = [\r\n  { id: 1, value: '‚ù§Ô∏è', matched: false },\r\n  { id: 2, value: '‚ù§Ô∏è', matched: false },\r\n  { id: 3, value: 'üíê', matched: false },\r\n  { id: 4, value: 'üíê', matched: false },\r\n  { id: 5, value: 'üíå', matched: false },\r\n  { id: 6, value: 'üíå', matched: false }\r\n];\r\n\r\nconst shuffleCards = () => {\r\n  return [...cards].sort(() => Math.random() - 0.5);\r\n};\r\n\r\nfunction MemoryMatch({ onComplete }) {\r\n  const [board, setBoard] = useState(shuffleCards());\r\n  const [flipped, setFlipped] = useState([]);\r\n  const [matched, setMatched] = useState([]);\r\n\r\n  const handleCardClick = (id) => {\r\n    if (flipped.length === 2) return;\r\n\r\n    const newFlipped = [...flipped, id];\r\n    setFlipped(newFlipped);\r\n\r\n    if (newFlipped.length === 2) {\r\n      const [firstId, secondId] = newFlipped;\r\n      if (board[firstId].value === board[secondId].value) {\r\n        setMatched([...matched, firstId, secondId]);\r\n        setFlipped([]);\r\n      } else {\r\n        setTimeout(() => setFlipped([]), 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (matched.length === board.length) {\r\n      onComplete(); // Go to the next game\r\n    }\r\n  }, [matched]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Memory Match</h2>\r\n      <div className=\"memory-board\">\r\n        {board.map((card, index) => (\r\n          <div\r\n            key={card.id}\r\n            className={`card ${flipped.includes(index) || matched.includes(index) ? 'flipped' : ''}`}\r\n            onClick={() => handleCardClick(index)}\r\n          >\r\n            {flipped.includes(index) || matched.includes(index) ? card.value : '‚ùì'}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryMatch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}